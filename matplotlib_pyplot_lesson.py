# Импорт библиотеки matplotlib.pyplot
import matplotlib.pyplot as plt
import numpy as np

# Данные для различных графиков
x = np.linspace(0, 10, 100) # np.linspace(start, stop, how_much_element_in_array)
y1 = np.sin(x)
y2 = np.cos(x)
data = np.random.randn(1000) # значения от -3 до 3, где 68% от всех значений от -1 до 1 и 95% от всех значений от -2 до 2 (как показано на гистограмме)
categories = ['A', 'B', 'C', 'D']
values = [3, 7, 2, 5]
sizes = [15, 30, 45, 10]


# Создание фигуры и массива из нескольких осей (графиков) в виде сетки 3x2 с размером 15x15 дюймов
fig, axs = plt.subplots(3, 2, figsize=(15, 15))

# 1. Линейный график (plot)
# Построение графика синусоидальной функции (sin(x)) на первой оси в первой строке и первом столбце
# x - массив значений по оси X, y1 - массив значений функции sin(x)
# label - метка для легенды графика
# color - цвет линии графика
# linestyle - стиль линии графика, '-' означает сплошная линия ("-" - Сплошная линия (по умолчанию), "--" - Пунктирная линия, "-." - Линия с точкой, ":" - Точечная линия, "" - Нет линии, только маркеры (если указаны))
# linewidth - толщина линии графика
# marker - маркеры данных на графике ("o" - круглый маркер (circle), "s" - квадратный маркер (square), "^" - треугольный маркер (triangle up), "*" - звёздочка (star), "x" - крест (cross), "d" - ромб (diamond))
axs[0, 0].plot(x, y1, label='sin(x)', color='blue', linestyle='-', linewidth=2, marker='o')
# Построение графика косинусоидальной функции (cos(x)) на той же оси
# y2 - массив значений функции cos(x)
# linestyle='--' означает пунктирную линию
# marker='x' - маркеры данных на графике (крестик)
axs[0, 0].plot(x, y2, label='cos(x)', color='red', linestyle='--', linewidth=2, marker='x')
# Установка заголовка для графика
axs[0, 0].set_title('Синус и Косинус')
# Установка метки для оси X
axs[0, 0].set_xlabel('X ось')
# Установка метки для оси Y
axs[0, 0].set_ylabel('Y ось')
# Включение сетки на графике
axs[0, 0].grid(True)
# Добавление легенды для графика, чтобы отображались метки sin(x) и cos(x)
axs[0, 0].legend()

# 2. Гистограмма
# Построение гистограммы на первой оси в первой строке и втором столбце
# data - массив данных для построения гистограммы
# bins - количество интервалов (корзин) (количество столбцов)
# color - цвет столбцов гистограммы
# alpha - прозрачность столбцов (от 0 до 1)
axs[0, 1].hist(data, bins=30, color='green', alpha=0.7)
# Установка заголовка для гистограммы
axs[0, 1].set_title('Гистограмма')
# Установка метки для оси X
axs[0, 1].set_xlabel('Значение')
# Установка метки для оси Y
axs[0, 1].set_ylabel('Частота')

# 3. Круговая диаграмма
# Построение круговой диаграммы на второй оси во второй строке и первом столбце
# sizes - массив значений для каждого сектора
# labels - метки для каждого сектора
# autopct - формат отображения процентов внутри секторов
# autopct='%1.1f%%' - одно десятичное место, например, 12.3%
# autopct='%1.2f%%' - два десятичных места, например, 12.34%
# autopct='%.2f%%' - два десятичных места без дополнительного пробела, например, 12.34% (не выделяется место под целое число)
# autopct='%.1f%%' - одно десятичное место без дополнительного пробела, например, 12.3% (не выделяется место под целое число)
# autopct='%1.0f%%' - целое число, например, 12%
# startangle - начальный угол для первого сектора
# colors - массив цветов для секторов
axs[1, 0].pie(sizes, labels=categories, autopct='%1.0f%%', startangle=90, colors=['blue', 'orange', 'green', 'red'])
# Установка заголовка для круговой диаграммы
axs[1, 0].set_title('Круговая диаграмма')

# 4. График рассеяния (scatter - точечный)
# Построение графика рассеяния для синусоидальной функции (sin(x)) на второй оси во второй строке и втором столбце
# x - массив значений по оси X, y1 - массив значений функции sin(x)
# label - метка для легенды графика
# color - цвет точек графика
axs[1, 1].scatter(x, y1, label='sin(x)', color='blue')
# Построение графика рассеяния для косинусоидальной функции (cos(x)) на той же оси
# y2 - массив значений функции cos(x)
axs[1, 1].scatter(x, y2, label='cos(x)', color='red')
# Установка заголовка для графика рассеяния
axs[1, 1].set_title('График рассеяния')
# Установка метки для оси X
axs[1, 1].set_xlabel('X ось')
# Установка метки для оси Y
axs[1, 1].set_ylabel('Y ось')
# Добавление легенды для графика, чтобы отображались метки sin(x) и cos(x)
axs[1, 1].legend()

# 5. График столбцов
# Построение графика столбцов на третьей оси в третьей строке и первом столбце
# categories - массив категорий (меток по оси X)
# values - массив значений для каждой категории
# color - массив цветов для каждого столбца
axs[2, 0].bar(categories, values, color=['blue', 'orange', 'green', 'red'])
# Установка заголовка для графика столбцов
axs[2, 0].set_title('График столбцов')
# Установка метки для оси X
axs[2, 0].set_xlabel('Категории')
# Установка метки для оси Y
axs[2, 0].set_ylabel('Значения')

# 6. График с областями
# Заливка области между двумя графиками (sin(x) и cos(x)) на третьей оси в третьей строке и втором столбце
# x - массив значений по оси X, y1 - массив значений функции sin(x), y2 - массив значений функции cos(x)
# color - цвет заливки области между графиками
# alpha - прозрачность заливки (от 0 до 1)
axs[2, 1].fill_between(x, y1, y2, color='gray', alpha=0.5)
# Построение графика синусоидальной функции (sin(x)) на той же оси
# label - метка для легенды графика
# color - цвет линии графика
# linestyle - стиль линии графика, '-' означает сплошная линия
axs[2, 1].plot(x, y1, label='sin(x)', color='blue', linestyle='-')
# Построение графика косинусоидальной функции (cos(x)) на той же оси
# linestyle='--' означает пунктирную линию
axs[2, 1].plot(x, y2, label='cos(x)', color='red', linestyle='--')
# Установка заголовка для графика с областями
axs[2, 1].set_title('График с областями')
# Установка метки для оси X
axs[2, 1].set_xlabel('X ось')
# Установка метки для оси Y
axs[2, 1].set_ylabel('Y ось')
# Добавление легенды для графика, чтобы отображались метки sin(x) и cos(x)
axs[2, 1].legend()

# Подстройка расстояний между графиками для предотвращения наложения
plt.tight_layout()

# Сохранение всех графиков в файл 'multi_plots.png'
plt.savefig('multi_plots.png')

# Отображение всех графиков на экране
plt.show()


# Создание всего одного графика
# Данные для построения графика 
x = np.linspace(0, 10, 100)
y = np.sin(x)

# Создание нового окна (figure) и объекта Axes
fig, ax = plt.subplots(figsize=(8, 6))  # указываем размеры окна

# Построение графика на объекте Axes
ax.plot(x, y, label='sin(x)', color='blue', linestyle='-', linewidth=2)
ax.set_title('График синусоиды')
ax.set_xlabel('X ось')
ax.set_ylabel('Y ось')
ax.grid(True)
ax.legend()

# Отображение графика
plt.show()

